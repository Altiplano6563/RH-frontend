{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/RH-frontend/src/components/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { CircularProgress, Box } from '@mui/material';\n\n/**\n * Componente de rota privada que verifica se o usuário está autenticado\n * antes de renderizar o componente filho.\n * \n * @param {Object} props - Propriedades do componente\n * @param {React.ReactNode} props.children - Componente filho a ser renderizado se autenticado\n * @param {string[]} [props.requiredPermissions] - Permissões necessárias para acessar a rota\n * @returns {React.ReactNode} - Componente filho ou redirecionamento para login\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children,\n  requiredPermissions\n}) => {\n  _s();\n  const {\n    currentUser,\n    isAuthenticated,\n    loading,\n    hasPermission\n  } = useAuth();\n\n  // Mostrar indicador de carregamento enquanto verifica autenticação\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Verificar se o usuário está autenticado\n  if (!isAuthenticated || !currentUser) {\n    // Redirecionar para a página de login\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Verificar permissões se necessário\n  if (requiredPermissions && !hasPermission(requiredPermissions)) {\n    // Redirecionar para a página de acesso negado ou dashboard\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Renderizar o componente filho se autenticado e com permissões\n  return children;\n};\n_s(PrivateRoute, \"9LOShmVRQ0LofMzjynzZQWj9vz8=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","CircularProgress","Box","jsxDEV","_jsxDEV","PrivateRoute","children","requiredPermissions","_s","currentUser","isAuthenticated","loading","hasPermission","display","justifyContent","alignItems","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/home/ubuntu/RH-frontend/src/components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { CircularProgress, Box } from '@mui/material';\n\n/**\n * Componente de rota privada que verifica se o usuário está autenticado\n * antes de renderizar o componente filho.\n * \n * @param {Object} props - Propriedades do componente\n * @param {React.ReactNode} props.children - Componente filho a ser renderizado se autenticado\n * @param {string[]} [props.requiredPermissions] - Permissões necessárias para acessar a rota\n * @returns {React.ReactNode} - Componente filho ou redirecionamento para login\n */\nconst PrivateRoute = ({ children, requiredPermissions }) => {\n  const { currentUser, isAuthenticated, loading, hasPermission } = useAuth();\n  \n  // Mostrar indicador de carregamento enquanto verifica autenticação\n  if (loading) {\n    return (\n      <Box \n        display=\"flex\" \n        justifyContent=\"center\" \n        alignItems=\"center\" \n        minHeight=\"100vh\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n  \n  // Verificar se o usuário está autenticado\n  if (!isAuthenticated || !currentUser) {\n    // Redirecionar para a página de login\n    return <Navigate to=\"/login\" replace />;\n  }\n  \n  // Verificar permissões se necessário\n  if (requiredPermissions && !hasPermission(requiredPermissions)) {\n    // Redirecionar para a página de acesso negado ou dashboard\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n  \n  // Renderizar o componente filho se autenticado e com permissões\n  return children;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,gBAAgB,EAAEC,GAAG,QAAQ,eAAe;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,SAAAC,MAAA,IAAAC,OAAA;AASA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM;IAAEC,WAAW;IAAEC,eAAe;IAAEC,OAAO;IAAEC;EAAc,CAAC,GAAGZ,OAAO,CAAC,CAAC;;EAE1E;EACA,IAAIW,OAAO,EAAE;IACX,oBACEP,OAAA,CAACF,GAAG;MACFW,OAAO,EAAC,MAAM;MACdC,cAAc,EAAC,QAAQ;MACvBC,UAAU,EAAC,QAAQ;MACnBC,SAAS,EAAC,OAAO;MAAAV,QAAA,eAEjBF,OAAA,CAACH,gBAAgB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;;EAEA;EACA,IAAI,CAACV,eAAe,IAAI,CAACD,WAAW,EAAE;IACpC;IACA,oBAAOL,OAAA,CAACL,QAAQ;MAACsB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAIb,mBAAmB,IAAI,CAACK,aAAa,CAACL,mBAAmB,CAAC,EAAE;IAC9D;IACA,oBAAOH,OAAA,CAACL,QAAQ;MAACsB,EAAE,EAAC,YAAY;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C;;EAEA;EACA,OAAOd,QAAQ;AACjB,CAAC;AAACE,EAAA,CA/BIH,YAAY;EAAA,QACiDL,OAAO;AAAA;AAAAuB,EAAA,GADpElB,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}